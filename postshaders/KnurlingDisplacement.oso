OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader KnurlingDisplacement
param	float	scale	0.100000001		%read{13,13} %write{2147483647,-1}
param	float	frequency	10		%read{10,10} %write{2147483647,-1}
param	float	amplitude	0.5		%read{12,12} %write{2147483647,-1}
param	float	region_start	0.200000003		%read{3,3} %write{2147483647,-1}
param	float	region_end	0.800000012		%read{6,6} %write{2147483647,-1}
oparam	point	outP	0 0 0		%read{14,17} %write{0,16} %initexpr
global	point	P	%read{0,0} %write{17,17}
global	float	u	%read{1,1} %write{2147483647,-1}
global	float	v	%read{2,2} %write{2147483647,-1}
local	float	u_coord	%read{3,10} %write{1,1}
local	float	v_coord	%read{2147483647,-1} %write{2,2}
local	float	___345_displacement	%read{13,15} %write{12,13}
temp	int	$tmp1	%read{4,4} %write{3,3}
temp	int	$tmp2	%read{5,9} %write{4,8}
const	int	$const1	0		%read{4,7} %write{2147483647,-1}
temp	int	$tmp3	%read{7,7} %write{6,6}
temp	int	$tmp4	%read{8,8} %write{7,7}
temp	float	$tmp5	%read{12,12} %write{11,11}
temp	float	$tmp6	%read{11,11} %write{10,10}
const	int	$const2	2		%read{14,16} %write{2147483647,-1}
temp	float	$tmp7	%read{15,15} %write{14,14}
temp	float	$tmp8	%read{16,16} %write{15,15}
code outP
# shaders/KnurlingDisplacement.osl:7
#     output point outP = P   // La nueva posición desplazada
	assign		outP P 	%filename{"shaders/KnurlingDisplacement.osl"} %line{7} %argrw{"wr"}
code ___main___
# shaders/KnurlingDisplacement.osl:11
#     float u_coord = u;  // Usamos 'u' como el eje a lo largo de la superficie
	assign		u_coord u 	%filename{"shaders/KnurlingDisplacement.osl"} %line{11} %argrw{"wr"}
# shaders/KnurlingDisplacement.osl:12
#     float v_coord = v;  // Usamos 'v' para la variación a lo largo de la barra
	assign		v_coord v 	%line{12} %argrw{"wr"}
# shaders/KnurlingDisplacement.osl:15
#     if (u_coord > region_start && u_coord < region_end) {
	gt		$tmp1 u_coord region_start 	%line{15} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp2 9 9 	%argrw{"r"}
	lt		$tmp3 u_coord region_end 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const1 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 17 17 	%argrw{"r"}
# shaders/KnurlingDisplacement.osl:17
#         float displacement = sin(u_coord * frequency) * amplitude;
	mul		$tmp6 u_coord frequency 	%line{17} %argrw{"wrr"}
	sin		$tmp5 $tmp6 	%argrw{"wr"}
	mul		___345_displacement $tmp5 amplitude 	%argrw{"wrr"}
# shaders/KnurlingDisplacement.osl:20
#         displacement *= scale;
	mul		___345_displacement ___345_displacement scale 	%line{20} %argrw{"wrr"}
# shaders/KnurlingDisplacement.osl:23
#         outP[2] += displacement;
	compref		$tmp7 outP $const2 	%line{23} %argrw{"wrr"}
	add		$tmp8 $tmp7 ___345_displacement 	%argrw{"wrr"}
	compassign	outP $const2 $tmp8 	%argrw{"wrr"}
# shaders/KnurlingDisplacement.osl:27
#     P = outP;
	assign		P outP 	%line{27} %argrw{"wr"}
	end
