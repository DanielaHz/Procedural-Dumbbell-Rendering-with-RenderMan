OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader metalPattern
param	float	Ks	1		%meta{string,help,"Specular scaling"}  %read{7,7} %write{2147483647,-1}
param	color	Cs	1 1 1		%meta{string,help,"Base color"}  %read{7,7} %write{2147483647,-1}
param	float	scale	0.5		%meta{string,help,"Scale of the noise pattern"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	frequency	5		%meta{string,help,"Frequency of the stripes or veins"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	color	resultColor	0 0 0		%read{2147483647,-1} %write{8,8}
global	point	P	%read{1,1} %write{2147483647,-1}
local	point	p	%read{2,2} %write{1,1}
local	float	n	%read{4,6} %write{3,5}
local	float	stripe	%read{8,8} %write{6,6}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	string	$const4	"perlin"		%read{3,3} %write{2147483647,-1}
const	float	$const5	0.5		%read{2,5} %write{2147483647,-1}
temp	point	$tmp1	%read{3,3} %write{2,2}
temp	float	$tmp2	%read{5,5} %write{4,4}
const	float	$const7	1		%read{4,4} %write{2147483647,-1}
const	float	$const8	0.200000003		%read{6,6} %write{2147483647,-1}
const	float	$const9	0.800000012		%read{6,6} %write{2147483647,-1}
temp	color	$tmp3	%read{8,8} %write{7,7}
code ___main___
# shaders/metal.osl:9
#     point p = transform("object", P);
	functioncall	$const2 2 	%filename{"shaders/metal.osl"} %line{9} %argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	p $const3 $const1 P 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{263} %argrw{"wrrr"}
# shaders/metal.osl:10
#     float n = noise("perlin", p * 0.5);
	mul		$tmp1 p $const5 	%filename{"shaders/metal.osl"} %line{10} %argrw{"wrr"}
	noise		n $const4 $tmp1 	%argrw{"wrr"}
# shaders/metal.osl:11
#     n = (n + 1) * 0.5;
	add		$tmp2 n $const7 	%line{11} %argrw{"wrr"}
	mul		n $tmp2 $const5 	%argrw{"wrr"}
# shaders/metal.osl:12
#     float stripe = smoothstep(0.2, 0.8, n);
	smoothstep	stripe $const8 $const9 n 	%line{12} %argrw{"wrrr"}
# shaders/metal.osl:13
#     resultColor = Ks * Cs * stripe;
	mul		$tmp3 Ks Cs 	%line{13} %argrw{"wrr"}
	mul		resultColor $tmp3 stripe 	%argrw{"wrr"}
	end
