OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader CurvatureBasedMix5
param	color	baseColor	0.0500000007 0.0500000007 0.0500000007		%read{17,17} %write{2147483647,-1}
param	color	edgeColor	1 0 0		%read{16,16} %write{2147483647,-1}
param	string	curvatureMap	""		%read{7,7} %write{2147483647,-1}
param	float	edgeMin	0.579999983		%read{9,9} %write{2147483647,-1}
param	float	edgeMax	0.649999976		%read{12,12} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{16,17}
global	point	P	%read{1,1} %write{2147483647,-1} %derivs
local	point	Pworld	%read{2,3} %write{1,1} %derivs
local	float	s	%read{5,7} %write{2,5} %derivs
local	float	t	%read{6,7} %write{3,6} %derivs
local	float	scale	%read{5,6} %write{4,4} %derivs
local	color	tex	%read{8,8} %write{7,7}
local	float	curvature	%read{9,12} %write{8,8}
const	string	$const1	"world"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	int	$const4	0		%read{2,13} %write{2147483647,-1}
const	int	$const5	1		%read{3,3} %write{2147483647,-1}
const	float	$const6	1		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{10,10} %write{9,9}
temp	int	$tmp2	%read{11,15} %write{10,14}
temp	int	$tmp3	%read{13,13} %write{12,12}
temp	int	$tmp4	%read{14,14} %write{13,13}
code ___main___
# CurvatureBasedMix5.osl:11
#     point Pworld = transform("world", P);
	functioncall	$const2 2 	%filename{"CurvatureBasedMix5.osl"} %line{11} %argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Pworld $const3 $const1 P 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{263} %argrw{"wrrr"}
# CurvatureBasedMix5.osl:12
#     float s = Pworld[0];  // Usa X como S
	compref		s Pworld $const4 	%filename{"CurvatureBasedMix5.osl"} %line{12} %argrw{"wrr"}
# CurvatureBasedMix5.osl:13
#     float t = Pworld[1];  // Usa Y como T
	compref		t Pworld $const5 	%line{13} %argrw{"wrr"}
# CurvatureBasedMix5.osl:16
#     float scale = 1.0;
	assign		scale $const6 	%line{16} %argrw{"wr"}
# CurvatureBasedMix5.osl:17
#     s *= scale;
	mul		s s scale 	%line{17} %argrw{"wrr"}
# CurvatureBasedMix5.osl:18
#     t *= scale;
	mul		t t scale 	%line{18} %argrw{"wrr"}
# CurvatureBasedMix5.osl:21
#     color tex = texture(curvatureMap, s, t);
	texture		tex curvatureMap s t 	%line{21} %argrw{"wrrr"} %argderivs{2,3}
# CurvatureBasedMix5.osl:22
#     float curvature = tex[0]; // Canal rojo
	compref		curvature tex $const4 	%line{22} %argrw{"wrr"}
# CurvatureBasedMix5.osl:25
#     if (curvature >= edgeMin && curvature <= edgeMax)
	ge		$tmp1 curvature edgeMin 	%line{25} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const4 	%argrw{"wrr"}
	if		$tmp2 15 15 	%argrw{"r"}
	le		$tmp3 curvature edgeMax 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const4 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 17 18 	%argrw{"r"}
# CurvatureBasedMix5.osl:26
#         result = edgeColor;
	assign		result edgeColor 	%line{26} %argrw{"wr"}
# CurvatureBasedMix5.osl:28
#         result = baseColor;
	assign		result baseColor 	%line{28} %argrw{"wr"}
	end
