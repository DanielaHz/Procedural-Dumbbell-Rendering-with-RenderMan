OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader CurvatureBasedMixExact
param	color	baseColor	0.0500000007 0.0500000007 0.0500000007		%read{7,7} %write{2147483647,-1}
param	color	edgeColor	1 0 0		%read{6,6} %write{2147483647,-1}
param	string	curvatureMap	""		%read{0,0} %write{2147483647,-1}
param	float	edgeValue	0.626999974		%read{2,2} %write{2147483647,-1}
param	float	tolerance	0.00999999978		%read{4,4} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{6,7}
global	float	u	%read{0,0} %write{2147483647,-1} %derivs
global	float	v	%read{0,0} %write{2147483647,-1} %derivs
local	color	tex	%read{1,1} %write{0,0}
local	float	curvature	%read{2,2} %write{1,1}
const	int	$const1	0		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
temp	float	$tmp2	%read{3,3} %write{2,2}
temp	int	$tmp3	%read{5,5} %write{4,4}
code ___main___
# curvatureBasedMix.osl:10
#     color tex = texture(curvatureMap, u, v);   // Leer mapa de curvatura
	texture		tex curvatureMap u v 	%filename{"curvatureBasedMix.osl"} %line{10} %argrw{"wrrr"} %argderivs{2,3}
# curvatureBasedMix.osl:11
#     float curvature = tex[0];                  // Tomar canal rojo (gris = r=g=b)
	compref		curvature tex $const1 	%line{11} %argrw{"wrr"}
# curvatureBasedMix.osl:14
#     if (abs(curvature - edgeValue) < tolerance)
	sub		$tmp2 curvature edgeValue 	%line{14} %argrw{"wrr"}
	abs		$tmp1 $tmp2 	%argrw{"wr"}
	lt		$tmp3 $tmp1 tolerance 	%argrw{"wrr"}
	if		$tmp3 7 8 	%argrw{"r"}
# curvatureBasedMix.osl:15
#         result = edgeColor;
	assign		result edgeColor 	%line{15} %argrw{"wr"}
# curvatureBasedMix.osl:17
#         result = baseColor;
	assign		result baseColor 	%line{17} %argrw{"wr"}
	end
