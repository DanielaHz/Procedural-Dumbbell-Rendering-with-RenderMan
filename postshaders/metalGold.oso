OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader metalGold
param	color	ForeColor	0.930000007 0.600000024 0.0599999987		%read{11,11} %write{2147483647,-1}
param	color	MiddleColor	0.651000023 0.279000014 0.00400000019		%read{12,12} %write{2147483647,-1}
param	color	BackColor	0.52700001 0.246000007 0.0359999985		%read{15,15} %write{2147483647,-1}
param	float	ForeRoughness	0.00999999978		%read{14,14} %write{2147483647,-1}
param	float	BackRoughness	0.0399999991		%read{15,15} %write{2147483647,-1}
param	vector	Normal	0 0 0		%read{1,21} %write{0,0} %initexpr
oparam	color	resultColor	0 0 0		%read{2147483647,-1} %write{27,27}
global	vector	I	%read{1,21} %write{2147483647,-1}
global	normal	N	%read{0,0} %write{2147483647,-1}
local	float	Factor1	%read{10,12} %write{4,4}
local	float	Factor2	%read{16,18} %write{9,9}
local	color	ForeColorAdjusted	%read{18,18} %write{14,14}
local	color	BackColorAdjusted	%read{17,17} %write{15,15}
local	color	MetalColor	%read{27,27} %write{19,19}
local	float	F0	%read{22,26} %write{20,20}
local	float	cosTheta	%read{23,23} %write{21,21}
local	float	fresnelSchlick	%read{27,27} %write{26,26}
const	float	$const1	1		%read{4,23} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
temp	float	$tmp2	%read{3,3} %write{2,2}
temp	float	$tmp3	%read{2,2} %write{1,1}
const	float	$const2	0.930000007		%read{3,3} %write{2147483647,-1}
temp	float	$tmp4	%read{8,8} %write{6,6}
temp	float	$tmp5	%read{6,6} %write{5,5}
const	float	$const3	1.29999995		%read{6,6} %write{2147483647,-1}
const	float	$const4	0		%read{9,9} %write{2147483647,-1}
const	string	$const5	"clamp"		%read{7,7} %write{2147483647,-1}
temp	float	$tmp6	%read{9,9} %write{8,8}
temp	float	$tmp7	%read{11,11} %write{10,10}
temp	color	$tmp8	%read{13,13} %write{11,11}
temp	color	$tmp9	%read{13,13} %write{12,12}
temp	color	$tmp10	%read{14,14} %write{13,13}
temp	float	$tmp11	%read{17,17} %write{16,16}
temp	color	$tmp12	%read{19,19} %write{17,17}
temp	color	$tmp13	%read{19,19} %write{18,18}
const	float	$const7	0.0399999991		%read{20,20} %write{2147483647,-1}
temp	float	$tmp14	%read{25,25} %write{22,22}
temp	float	$tmp15	%read{25,25} %write{24,24}
temp	float	$tmp16	%read{24,24} %write{23,23}
const	float	$const8	5		%read{24,24} %write{2147483647,-1}
temp	float	$tmp17	%read{26,26} %write{25,25}
code Normal
# shaders/metalGold.osl:7
#     vector Normal = N,
	assign		Normal N 	%filename{"shaders/metalGold.osl"} %line{7} %argrw{"wr"}
code ___main___
# shaders/metalGold.osl:11
#     float Factor1 = 1.0 - pow(fabs(dot(I, Normal)), 2.0 * 0.465);
	dot		$tmp3 I Normal 	%filename{"shaders/metalGold.osl"} %line{11} %argrw{"wrr"}
	fabs		$tmp2 $tmp3 	%argrw{"wr"}
	pow		$tmp1 $tmp2 $const2 	%argrw{"wrr"}
	sub		Factor1 $const1 $tmp1 	%argrw{"wrr"}
# shaders/metalGold.osl:12
#     float Factor2 = clamp(pow(dot(Normal, I), 1.3), 0.0, 1.0);
	dot		$tmp5 Normal I 	%line{12} %argrw{"wrr"}
	pow		$tmp4 $tmp5 $const3 	%argrw{"wrr"}
	functioncall	$const5 10 	%argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 $tmp4 $const1 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		Factor2 $tmp6 $const4 	%argrw{"wrr"}
# shaders/metalGold.osl:13
#     color ForeColorAdjusted = ((1 - Factor1) * ForeColor + MiddleColor * Factor1) * ForeRoughness;
	sub		$tmp7 $const1 Factor1 	%filename{"shaders/metalGold.osl"} %line{13} %argrw{"wrr"}
	mul		$tmp8 $tmp7 ForeColor 	%argrw{"wrr"}
	mul		$tmp9 MiddleColor Factor1 	%argrw{"wrr"}
	add		$tmp10 $tmp8 $tmp9 	%argrw{"wrr"}
	mul		ForeColorAdjusted $tmp10 ForeRoughness 	%argrw{"wrr"}
# shaders/metalGold.osl:14
#     color BackColorAdjusted = BackColor * BackRoughness;
	mul		BackColorAdjusted BackColor BackRoughness 	%line{14} %argrw{"wrr"}
# shaders/metalGold.osl:15
#     color MetalColor = ((1 - Factor2) * BackColorAdjusted) + (ForeColorAdjusted * Factor2);
	sub		$tmp11 $const1 Factor2 	%line{15} %argrw{"wrr"}
	mul		$tmp12 $tmp11 BackColorAdjusted 	%argrw{"wrr"}
	mul		$tmp13 ForeColorAdjusted Factor2 	%argrw{"wrr"}
	add		MetalColor $tmp12 $tmp13 	%argrw{"wrr"}
# shaders/metalGold.osl:16
#     float F0 = 0.04;
	assign		F0 $const7 	%line{16} %argrw{"wr"}
# shaders/metalGold.osl:17
#     float cosTheta = dot(I, Normal);
	dot		cosTheta I Normal 	%line{17} %argrw{"wrr"}
# shaders/metalGold.osl:18
#     float fresnelSchlick = F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);
	sub		$tmp14 $const1 F0 	%line{18} %argrw{"wrr"}
	sub		$tmp16 $const1 cosTheta 	%argrw{"wrr"}
	pow		$tmp15 $tmp16 $const8 	%argrw{"wrr"}
	mul		$tmp17 $tmp14 $tmp15 	%argrw{"wrr"}
	add		fresnelSchlick F0 $tmp17 	%argrw{"wrr"}
# shaders/metalGold.osl:19
#     resultColor = fresnelSchlick * MetalColor;
	mul		resultColor fresnelSchlick MetalColor 	%line{19} %argrw{"wrr"}
	end
