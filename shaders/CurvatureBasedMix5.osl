shader CurvatureBasedMix5(
    color baseColor = color(0.05, 0.05, 0.05),
    color edgeColor = color(1.0, 0.0, 0.0),
    string curvatureMap = "",
    float edgeMin = 0.58,
    float edgeMax = 0.65,
    output color result = 0
)
{
    // Generar coordenadas UV desde la posición (planar projection en eje Z)
    point Pworld = transform("world", P);
    float s = Pworld[0];  // Usa X como S
    float t = Pworld[1];  // Usa Y como T

    // Escala para ajustar el tamaño del mapa proyectado
    float scale = 1.0;
    s *= scale;
    t *= scale;

    // Leer valor de curvatura desde la textura con UVs proyectadas
    color tex = texture(curvatureMap, s, t);
    float curvature = tex[0]; // Canal rojo

    // Aplicar mezcla según rango de curvatura
    if (curvature >= edgeMin && curvature <= edgeMax)
        result = edgeColor;
    else
        result = baseColor;
}